- id: hvac_day_temperature
  alias: HVAC Day Temperature
  trigger:
    - platform: state
      entity_id: binary_sensor.thermal_perimeter
      from: ['off', 'on']
      to: ['off', 'on']
      for:
        minutes: 1
    - platform: time_pattern
      minutes: /1
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: binary_sensor.thermal_perimeter
          state: 'on'
    - condition: time
      after: input_datetime.quite_time_off
      before: input_datetime.pre_quite_time_range_3
  action:
    - choose:
        # Cool down if temperature is too high.
        - conditions:
            - condition: or
              conditions:
                - condition: template
                  value_template: >
                    {{
                      states.sensor.den_temperature.state != 'unavailable'
                        and
                      states.sensor.den_temperature.state | float >=
                        states.input_number.den_temperature_high.state | float
                    }}
                - condition: template
                  value_template: >
                    {{
                      states.sensor.office_1_temperature.state != 'unavailable'
                        and
                      states.sensor.office_1_temperature.state | float >=
                        states.input_number.office_1_temperature_high.state | float
                    }}
                - condition: template
                  value_template: >
                    {{
                      states.sensor.office_2_temperature.state != 'unavailable'
                        and
                      states.sensor.office_2_temperature.state | float >=
                        states.input_number.office_2_temperature_high.state | float
                    }}
            - condition: template
              value_template: >
                {{ not is_state('sensor.hvac_preset_mode', 'Down') }}
          sequence:
            - service: climate.set_hvac_mode
              data:
                entity_id: climate.thermostat
                hvac_mode: heat_cool
            - service: climate.set_preset_mode
              data:
                entity_id: climate.thermostat
                preset_mode: Down

        # Heat up if temperature is too low.
        - conditions:
            - condition: or
              conditions:
                - condition: template
                  value_template: >
                    {{
                      states.sensor.den_temperature.state != 'unavailable'
                        and
                      states.sensor.den_temperature.state | float <=
                        states.input_number.den_temperature_low.state | float
                    }}
                - condition: template
                  value_template: >
                    {{
                      states.sensor.office_1_temperature.state != 'unavailable'
                        and
                      states.sensor.office_1_temperature.state | float <=
                        states.input_number.office_1_temperature_low.state | float
                    }}
                - condition: template
                  value_template: >
                    {{
                      states.sensor.office_2_temperature.state != 'unavailable'
                        and
                      states.sensor.office_2_temperature.state | float <=
                        states.input_number.office_2_temperature_low.state | float
                    }}
            - condition: template
              value_template: >
                {{ not is_state('sensor.hvac_preset_mode', 'Up') }}
          sequence:
            - service: climate.set_hvac_mode
              data:
                entity_id: climate.thermostat
                hvac_mode: heat_cool
            - service: climate.set_preset_mode
              data:
                entity_id: climate.thermostat
                preset_mode: Up
            # Turn on humidifiers.
            - service: scene.turn_on
              target:
                entity_id: scene.day_humidifiers_on

        # Otherwise set default preset (Home).
        - conditions:
            - condition: or
              conditions:
                - condition: and
                  conditions:
                    - condition: template
                      value_template: >
                        {{ is_state('sensor.hvac_preset_mode', 'Down') }}
                    - condition: template
                      value_template: >
                        {{
                          states.sensor.den_temperature.state == 'unavailable'
                            or
                          states.sensor.den_temperature.state | float <=
                            states.input_number.den_temperature_desired.state | float
                        }}
                    - condition: template
                      value_template: >
                        {{
                          states.sensor.office_1_temperature.state == 'unavailable'
                            or
                          states.sensor.office_1_temperature.state | float <=
                            states.input_number.office_1_temperature_desired.state | float
                        }}
                    - condition: template
                      value_template: >
                        {{
                          states.sensor.office_2_temperature.state == 'unavailable'
                            or
                          states.sensor.office_2_temperature.state | float <=
                            states.input_number.office_2_temperature_desired.state | float
                        }}

                - condition: and
                  conditions:
                    - condition: template
                      value_template: >
                        {{ is_state('sensor.hvac_preset_mode', 'Up') }}
                    - condition: template
                      value_template: >
                        {{
                          states.sensor.den_temperature.state == 'unavailable'
                            or
                          states.sensor.den_temperature.state | float >=
                            states.input_number.den_temperature_desired.state | float
                        }}
                    - condition: template
                      value_template: >
                        {{
                          states.sensor.office_1_temperature.state == 'unavailable'
                            or
                          states.sensor.office_1_temperature.state | float >=
                            states.input_number.office_1_temperature_desired.state | float
                        }}
                    - condition: template
                      value_template: >
                        {{
                          states.sensor.office_2_temperature.state == 'unavailable'
                            or
                          states.sensor.office_2_temperature.state | float >=
                            states.input_number.office_2_temperature_desired.state | float
                        }}

          sequence:
            - service: climate.set_hvac_mode
              data:
                entity_id: climate.thermostat
                hvac_mode: heat_cool
            - service: climate.set_preset_mode
              data:
                entity_id: climate.thermostat
                preset_mode: Home

- id: hvac_night_temperature
  alias: HVAC Night Temperature
  trigger:
    - platform: state
      entity_id: binary_sensor.thermal_perimeter
      from: ['off', 'on']
      to: ['off', 'on']
      for:
        minutes: 1
    - platform: time_pattern
      minutes: /1
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: binary_sensor.thermal_perimeter
          state: 'on'
    - condition: time
      after: input_datetime.pre_quite_time_range_3
      before: input_datetime.quite_time_off
  action:
    - choose:
        # Cool down if temperature is too high.
        - conditions:
            - condition: or
              conditions:
                - condition: template
                  value_template: >
                    {{
                      states.sensor.bedroom_1_temperature.state | float >=
                        states.input_number.bedroom_1_temperature_high.state | float
                    }}
                - condition: template
                  value_template: >
                    {{
                      states.sensor.den_temperature.state | float >=
                        states.input_number.den_temperature_high.state | float
                    }}
            - condition: template
              value_template: >
                {{ not is_state('sensor.hvac_preset_mode', 'Down') }}
          sequence:
            - service: climate.set_hvac_mode
              data:
                entity_id: climate.thermostat
                hvac_mode: heat_cool
            - service: climate.set_preset_mode
              data:
                entity_id: climate.thermostat
                preset_mode: Down

        # Heat up if temperature is too low.
        - conditions:
            - condition: or
              conditions:
                - condition: template
                  value_template: >
                    {{
                      states.sensor.bedroom_1_temperature.state | float <=
                        states.input_number.bedroom_1_temperature_low.state | float
                    }}
                - condition: template
                  value_template: >
                    {{ states.sensor.den_temperature.state | float <=
                        states.input_number.den_temperature_low.state | float
                    }}
            - condition: template
              value_template: >
                {{ not is_state('sensor.hvac_preset_mode', 'Up') }}
          sequence:
            - service: climate.set_hvac_mode
              data:
                entity_id: climate.thermostat
                hvac_mode: heat_cool
            - service: climate.set_preset_mode
              data:
                entity_id: climate.thermostat
                preset_mode: Up
            # Turn on humidifiers.
            - service: scene.turn_on
              target:
                entity_id: scene.night_humidifiers_on

        # Otherwise set default preset (Sleep).
        - conditions:
            condition: or
            conditions:
              - condition: and
                conditions:
                  - condition: template
                    value_template: >
                      {{ is_state('sensor.hvac_preset_mode', 'Down') }}
                  - condition: template
                    value_template: >
                      {{
                        states.sensor.bedroom_1_temperature.state | float <=
                          states.input_number.bedroom_1_temperature_desired.state | float
                      }}
                  - condition: template
                    value_template: >
                      {{ states.sensor.den_temperature.state | float <=
                          states.input_number.den_temperature_desired.state | float
                      }}
              - condition: and
                conditions:
                  - condition: template
                    value_template: >
                      {{ is_state('sensor.hvac_preset_mode', 'Up') }}
                  - condition: template
                    value_template: >
                      {{ states.sensor.bedroom_1_temperature.state | float >=
                          states.input_number.bedroom_1_temperature_desired.state | float
                      }}
                  - condition: template
                    value_template: >
                      {{ states.sensor.den_temperature.state | float >=
                          states.input_number.den_temperature_desired.state | float
                      }}
          sequence:
            - service: climate.set_hvac_mode
              data:
                entity_id: climate.thermostat
                hvac_mode: heat_cool
            - service: climate.set_preset_mode
              data:
                entity_id: climate.thermostat
                preset_mode: Sleep

- id: hvac_on_thermal_perimeter_state
  alias: HVAC On Thermal Perimeter State
  trigger:
    - platform: state
      entity_id: binary_sensor.thermal_perimeter
      from: ['off', 'on']
      to: ['off', 'on']
      for:
        minutes: 1
    - platform: state
      entity_id: climate.thermostat
      from: 'off'
      to: 'on'
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.thermal_perimeter
              state: 'off'
            - condition: state
              entity_id: climate.thermostat
              state: 'off'
          sequence:
            - service: climate.set_hvac_mode
              data:
                entity_id: climate.thermostat
                hvac_mode: heat_cool
            - service: climate.set_preset_mode
              data:
                entity_id: climate.thermostat
                preset_mode: Home

        - conditions:
            - condition: state
              entity_id: binary_sensor.thermal_perimeter
              state: 'on'
          sequence:
            - service: climate.set_hvac_mode
              data:
                entity_id: climate.thermostat
                hvac_mode: 'off'
            - condition: or
              conditions:
                - condition: state
                  entity_id: binary_sensor.hvac_has_been_turned_off
                  state: 'on'
                - condition: state
                  entity_id: binary_sensor.hvac_is_running
                  state: 'on'
            - condition: state
              entity_id: binary_sensor.quite_time
              state: 'off'
            - event: tts
              event_data:
                text: <audio src="soundbank://soundlibrary/alarms/beeps_and_bloops/tone_05"/>The climate control system is going to be turned off. Please close {{ state_attr('sensor.thermal_perimeter_breached', 'summary') }} to turn it on again.

- id: hvac_special_mode_lock
  alias: HVAC Special Mode Lock
  trigger:
    - platform: state
      entity_id: sensor.hvac_preset_mode
  condition:
    - condition: state
      entity_id: binary_sensor.hvac_mode_lock
      state: 'on'
  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.thermostat
        preset_mode: Special
