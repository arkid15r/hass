- id: tts_humidifier_refill_reminder
  alias: 'TTS: Humidifier Refill Reminder'
  trigger:
    - platform: time
      at: input_datetime.pre_quite_time_range_1
  condition:
    - condition: state
      entity_id: input_boolean.play_tts_messages
      state: 'on'
  action:
    - event: tts
      event_data:
        areas_on:
          - bedroom_1
          - den
        text: <audio src="soundbank://soundlibrary/alarms/beeps_and_bloops/tone_05"/>This is just a nightly reminder to check your humidifier's water amount and refill it if needed.

- id: tts_start_airing_reminder
  alias: 'TTS: Start Airing Reminder'
  trigger:
    - platform: state
      entity_id: binary_sensor.airing_ways
      from: 'on'
      to: 'off'
      for: 00:01:00
    - platform: state
      entity_id: binary_sensor.outdoor_temperature_higher_or_equal
      from: 'on'
      to: 'off'
    - platform: time_pattern
      minutes: /30
  condition:
    - condition: state
      entity_id: sensor.air_pollution_level
      state: ['good', 'moderate']
    - condition: or
      conditions:
        - condition: time
          after: '08:00:00'
          before: '11:00:00'
        - condition: time
          after: '18:00:00'
          before: '21:00:00'
    - condition: template
      value_template: >
        {{ states.sensor.indoor_temperature.state | float >=
            states.input_number.climate_desired_temperature_high.state | float
        }}
    - condition: state
      entity_id: binary_sensor.hvac_is_cooling
      state: 'off'
    - condition: numeric_state
      entity_id: sensor.outdoor_temperature
      below: sensor.indoor_temperature
    - condition: state
      entity_id: binary_sensor.airing_ways
      state: 'off'
    - condition: state
      entity_id: binary_sensor.outdoor_temperature_higher_or_equal
      state: 'off'
  action:
    - event: tts
      event_data:
        text: <audio src='soundbank://soundlibrary/alarms/beeps_and_bloops/tone_05'/>Just FYI, the outside temperature is lower at the moment. I suggest opening {{ state_attr('binary_sensor.airing_ways', 'closed') }} when you have a chance.

- id: tts_stop_airing_reminder
  alias: 'TTS: Stop Airing Reminder'
  trigger:
    - platform: state
      entity_id: binary_sensor.airing_ways
      from: 'off'
      to: 'on'
      for: 00:01:00
    - platform: state
      entity_id: binary_sensor.outdoor_temperature_2_degrees_higher
      from: 'off'
      to: 'on'
    - platform: time_pattern
      minutes: /30
  condition:
    - condition: template
      value_template: >
        {{ states.sensor.indoor_temperature.state | float >=
            states.input_number.climate_desired_temperature_high.state | float
        }}
    - condition: template
      value_template: >
        {{ states.sensor.outdoor_temperature.state | float >=
            states.input_number.climate_desired_temperature_low.state | float
        }}
    - condition: template
      value_template: >
        {{ states.sensor.temperature_forecast.state | float >=
            states.input_number.climate_desired_temperature_high.state | float
        }}
    - condition: state
      entity_id: binary_sensor.outdoor_temperature_2_degrees_higher
      state: 'on'
    - condition: state
      entity_id: binary_sensor.thermal_perimeter
      state: 'on'
      for: 00:01:00
    - condition: time
      after: '08:00:00'
      before: '16:00:00'
  action:
    - event: tts
      event_data:
        text: <audio src='soundbank://soundlibrary/alarms/beeps_and_bloops/tone_05'/>Just FYI, the temperature outside is no longer lower than inside. I suggest closing {{ state_attr('binary_sensor.airing_ways', 'open') }} when you have a chance.


- id: tts_air_pollution_level_high
  alias: 'TTS: Air Pollution Level High'
  trigger:
    - platform: state
      entity_id: binary_sensor.thermal_perimeter
      from: 'off'
      to: 'on'
      for: 00:01:00
    - platform: state
      entity_id: sensor.air_pollution_level
      to: ['unhealthy', 'very unhealthy', 'hazardous']
    - platform: time_pattern
      minutes: /30
  condition:
    - condition: state
      entity_id: binary_sensor.thermal_perimeter
      state: 'on'
    - condition: state
      entity_id: sensor.air_pollution_level
      state: ['unhealthy', 'very unhealthy', 'hazardous']
  action:
    - event: tts
      event_data:
        text: <audio src='soundbank://soundlibrary/alarms/beeps_and_bloops/tone_05'/>Just FYI, the air pollution level is {{ states('sensor.air_pollution_level') }}. I suggest closing {{ state_attr('binary_sensor.airing_ways', 'open') }} as soon as possible.
