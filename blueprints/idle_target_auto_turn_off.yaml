# Idle Target Turn Off Automation Blueprint.
#
# Author: Ark (ark@cho.red)

blueprint:
  name: Idle Target Turn Off Automation
  description: |
    Turns Off Idle Target.

    Inputs:
      - **Check Frequency** (*default*: /1, *unit*: minutes): how often (in minutes) to check whether the `Target` is idle.
      - **Target**: an entity with 'on'/'off' state capability which needs to be turned off.
      - **Target Active Time** (*default*: 0, *unit*: seconds): a minimum amount of time the `Target` is required to be in 'on' state at the moment of the check.
      - **Watcher**: (*optional*) an entity with 'on'/'off' state capability which tracks activity in the `Target` area. If no activity detected by the `Watcher` for at least `Wathcer Idle Time` the `Target` will be considered idle.
      - **Watcher Inactive Time** (*default*: 0, *unit*: seconds): an amount of time without any activity detected by the `Watcher` required to consider the `Target` idle.
      - **Scene**: a scene that turns the idle `Target` off.
      - **Skip Unless** (*optional*): turn the `Target` off if the entity is in the required state (see the `Skip Unless State`) only.
      - **Skip Unless State** (*default: off*): a state ('on'/'off') in which the `Skip Unless` entity must be in order to get the `Scene` activated. If no `Skip Unless` provided the `Skip Unless State` is ignored.

  domain: automation
  input:
    check_frequency_minutes:
      name: Check Frequency
      description: Run every
      default: /1
      selector:
        text:

    target_id:
      name: Target
      description: If the entity (or a group of entities) is active
      selector:
        entity:

    target_active_time_seconds:
      name: Target Active Time (optional)
      description: For at least
      default: 0
      selector:
        number:
          min: 0
          max: 3600
          step: 1
          unit_of_measurement: "second(s)"
          mode: slider

    watcher_id:
      name: Watcher (optional)
      description: And the entity (or a group of entities)
      default:
      selector:
        entity: {}

    watcher_inactive_time_seconds:
      name: Watcher Inactive Time (optional)
      description: Is inactive for at least
      default: 0
      selector:
        number:
          min: 0
          max: 3600
          step: 1
          unit_of_measurement: "second(s)"
          mode: slider

    scene_id:
      name: Scene
      description: Then activate the scene
      selector:
        entity:
          domain: scene

    skip_unless_id:
      name: "Skip Unless (optional)"
      description: Howerver, don't activate the scene if the entity
      default:
      selector:
        entity: {}

    skip_unless_state:
      name: "Skip Unless State (optional)"
      description: Is in a state which differs from this
      default: false
      selector:
        boolean: {}

variables:
  skip_unless_id: !input "skip_unless_id"
  skip_unless_state: !input "skip_unless_state"
  watcher_id: !input "watcher_id"
  watcher_inactive_time_seconds: !input "watcher_inactive_time_seconds"

trigger:
  - platform: time_pattern
    minutes: !input "check_frequency_minutes"

condition:
  - condition: or
    conditions:
      - "{{ skip_unless_id == none }}"
      - "{{ skip_unless_state and states[skip_unless_id].state == 'on' }}"
      - "{{ not skip_unless_state and states[skip_unless_id].state == 'off' }}"

  - condition: or
    conditions:
      - "{{ watcher_id == none }}"
      - "{{ as_timestamp(now()) - as_timestamp(states[watcher_id].last_changed)>= watcher_inactive_time_seconds|float }}"

  - condition: state
    entity_id: !input "target_id"
    state: "on"
    for: !input "target_active_time_seconds"

action:
  - scene: !input "scene_id"
