# Idle Target Turn Off Automation Blueprint.
#
# Author: Ark (ark@cho.red)

blueprint:
  name: Idle Target Turn Off Automation
  description: |
    Turns Off Idle Target.

    Inputs:
      - **Check Frequency** (*default*: /1, *unit*: minutes): how often (in minutes) to check whether the `Target` is idle.
      - **Target**: an entity with 'on'/'off' state capability which needs to be turned off.
      - **Target Active Time** (*default*: 0, *unit*: seconds): a minimum amount of time the `Target` is required to be in 'on' state at the moment of the check.
      - **Watcher**: (*optional*) an entity with 'on'/'off' state capability which tracks activity in the `Target` area. If no activity detected by the `Watcher` for at least `Wathcer Idle Time` the `Target` will be considered idle.
      - **Watcher Inactive Time** (*default*: 0, *unit*: seconds): an amount of time without any activity detected by the `Watcher` required to consider the `Target` idle.
      - **Scene**: a scene that turns the idle `Target` off.
      - **Run If Only** (*optional*): run the automation if the entity is in a required state (see the `Run If Only State`) only.
      - **Run If Only State** (*default: off*): a state ('on'/'off') in which the `Run If Only` entity must be to run the automation. If no `Run If Only` entity provided the `Run If Only State` is ignored.

  domain: automation
  input:
    check_frequency_minutes:
      name: Check Frequency
      description: Run every
      default: /1
      selector:
        text:

    target:
      name: Target
      description: If the entity (or a group of entities) is active
      selector:
        entity:

    target_active_time_seconds:
      name: Target Active Time (optional)
      description: For at least
      default: 0
      selector:
        number:
          min: 0
          max: 3600
          step: 1
          unit_of_measurement: second(s)
          mode: slider

    watcher:
      name: Watcher (optional)
      description: And the entity (or a group of entities)
      default:
      selector:
        entity: {}

    watcher_inactive_time_seconds:
      name: Watcher Inactive Time (optional)
      description: Is inactive for at least
      default: 0
      selector:
        number:
          min: 0
          max: 3600
          step: 1
          unit_of_measurement: second(s)
          mode: slider

    scene:
      name: Scene
      description: Then activate the scene
      selector:
        entity:
          domain: scene

    run_if:
      name: Run If Only (optional)
      description: Howerver, don't run the automation if the entity
      default:
      selector:
        entity: {}

    run_if_state:
      name: Run If Only State (optional)
      description: Is not in this state
      default: "off"
      selector:
        text:

variables:
  run_if: !input run_if
  run_if_state: !input run_if_state
  watcher: !input watcher
  watcher_inactive_time_seconds: !input watcher_inactive_time_seconds

trigger:
  - platform: time_pattern
    minutes: !input check_frequency_minutes

condition:
  - condition: or
    conditions:
      - "{{ run_if == none }}"
      - "{{ states[run_if].state == run_if_state }}"

  - condition: or
    conditions:
      - "{{ watcher == none }}"
      - "{{ as_timestamp(now()) - as_timestamp(states[watcher].last_changed) >= watcher_inactive_time_seconds|float }}"

  - condition: state
    entity_id: !input target
    state: "on"
    for: !input target_active_time_seconds

action:
  - scene: !input scene
