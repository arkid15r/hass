# Scene Automation Blueprint.
#
# Author: Ark (ark@cho.red)

blueprint:
  name: '[Automate]: '
  description: |
    Automates Scenes Activation.

    The automation supports two default scenes for 'on'/'off' `Watcher` states and three optional scenes which are activated depending on the current time.
    The `Default Scene On` is automatically activated if none of the `Scene #[1-3]` is selected for activation. The `Default Scene Off` (optional) is automatically activated if the `Watcher` stays in 'off' state for at least `Watcher Inactive Time`.

    Inputs:
      - **Watcher**: an entity with 'on'/'off' state capability which triggers scene activation.
      - **Watcher Inactive Time** (*default*: 60, *unit*: seconds): an amount of time `Watcher` required to stay in 'off' state in order to get the `Default Off Scene` activated.
      - **Default On Scene**: a scene to activate after the `Watcher` switches to 'on' state.
      - **Default Off Scene** (*optional*): an optional scene to activate after the `Watcher` switches to 'off' state and stays in it for at least `Watcher Inactive Time`.
      - **Scene #1** (*optional*): a scene that should be activated within `Scene #1 Start Time` - `Scene #1 End Time` time range.
      - **Scene #1 Start Time** (*optional*): `Scene #1` time range start.
      - **Scene #1 End Time** (*optional*): `Scene #1` time range end.
      - **Scene #2** (*optional*): a scene that should be activated within `Scene #2 Start Time` - `Scene #2 End Time` time range.
      - **Scene #2 Start Time** (*optional*): `Scene #2` time range start.
      - **Scene #2 End Time** (*optional*): `Scene #2` time range end.
      - **Scene #3** (*optional*): a scene that should be activated within `Scene #3 Start Time` - `Scene #3 End Time` time range.
      - **Scene #3 Start Time** (*optional*): `Scene #3` time range start.
      - **Scene #3 End Time** (*optional*): `Scene #3` time range end.

  domain: automation
  input:
    watcher:
      name: Watcher
      description: An entity that triggers scene activation
      default:
      selector:
        entity: {}

    watcher_inactive_time_seconds:
      name: Watcher Inactive Time
      description: An amount of time the watcher needs to remain inactive in order to load the `Default Off Scene`
      default: 0
      selector:
        number:
          min: 0
          max: 3600
          step: 1
          unit_of_measurement: seconds
          mode: slider

    default_scene_on:
      name: Default On Scene
      description: A scene to activate if none of the 3 optional scenes is selected for activation
      default:
      selector:
        entity:
          domain: scene

    default_scene_off:
      name: Default Off Scene (optional)
      description: A scene to activate after the `Watcher Inactive Time`
      default: scene.none
      selector:
        entity:
          domain: scene

    scene_1:
      name: 'Scene #1 (optional)'
      description: 'A scene #1'
      default: scene.none
      selector:
        entity:
          domain: scene

    scene_1_start_time:
      name: 'Scene #1 Start Time (optional)'
      description: 'A start time for the Scene #1'
      default: '00:00:00'
      selector:
        time:

    scene_1_end_time:
      name: 'Scene #1 End Time (optional)'
      description: 'An end time for the Scene #1'
      default: '00:00:00'
      selector:
        time:

    scene_2:
      name: 'Scene #2 (optional)'
      description: 'A scene #2'
      default: scene.none
      selector:
        entity:
          domain: scene

    scene_2_start_time:
      name: 'Scene #2 Start Time (optional)'
      description: 'A start time for the Scene #2'
      default: '00:00:00'
      selector:
        time:

    scene_2_end_time:
      name: 'Scene #2 End Time (optional)'
      description: 'An end time for the Scene #2'
      default: '00:00:00'
      selector:
        time:

    scene_3:
      name: 'Scene #3 (optional)'
      description: 'A scene #3'
      default: scene.none
      selector:
        entity:
          domain: scene

    scene_3_start_time:
      name: 'Scene #3 Start Time (optional)'
      description: 'A start time for the Scene #3'
      default: '00:00:00'
      selector:
        time:

    scene_3_end_time:
      name: 'Scene #3 End Time (optional)'
      description: 'An end time for the Scene #3'
      default: '00:00:00'
      selector:
        time:

    run_if:
      name: Run If Only (optional)
      description: Don't run the automation if the entity
      default:
      selector:
        entity: {}

    run_if_state:
      name: Run If Only State (optional)
      description: Is not in this state
      default:
      selector:
        text:

variables:
  run_if: !input run_if
  run_if_state: !input run_if_state
  scene_1: !input scene_1
  scene_2: !input scene_2
  scene_3: !input scene_3
  watcher: !input watcher
  watcher_inactive_time_seconds: !input watcher_inactive_time_seconds

trigger:
  - platform: state
    entity_id: !input watcher
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: !input watcher
    from: 'on'
    to: 'off'
    for: !input watcher_inactive_time_seconds

condition:
  - condition: or
    conditions:
      - '{{ not run_if or not run_if_state }}'
      - '{{ states[run_if].state == run_if_state }}'

action:
  - choose:
      # The `Watcher` goes 'off'.
      - conditions:
          - condition: template
            value_template: >
              {{ trigger.to_state.state == 'off' and
                 default_scene_off != 'scene.none'
              }}
        sequence:
          - service: scene.turn_on
            target:
              entity_id: !input default_scene_off

      # The `Watcher` goes 'on'.
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'on' }}"
        sequence:
          - choose:
              - conditions:
                  - "{{ scene_1 != 'scene.none' }}"
                  - condition: time
                    after: !input scene_1_start_time
                    before: !input scene_1_end_time
                sequence:
                  - service: scene.turn_on
                    target:
                      entity_id: !input scene_1

              - conditions:
                  - "{{ scene_2 != 'scene.none' }}"
                  - condition: time
                    after: !input scene_2_start_time
                    before: !input scene_2_end_time
                sequence:
                  - service: scene.turn_on
                    target:
                      entity_id: !input scene_2

              - conditions:
                  - "{{ scene_3 != 'scene.none' }}"
                  - condition: time
                    after: !input scene_3_start_time
                    before: !input scene_3_end_time
                sequence:
                  - service: scene.turn_on
                    target:
                      entity_id: !input scene_3

            default:
              - service: scene.turn_on
                target:
                  entity_id: !input default_scene_on
