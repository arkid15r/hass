# Scene Automation Blueprint.
#
# Author: Arkadii Yakovets (ark@cho.red)

blueprint:
  name: '[Automate]: '
  description: |
    Automates Scenes Activation.

    The automation supports two default scenes for 'on'/'off' `Watcher` states and three optional scenes which are activated depending on the current time.
    The `Default Scene On` is automatically activated if none of the `Scene #[1-3]` is selected for activation. The `Default Scene Off` (optional) is automatically activated if the `Watcher` stays in 'off' state for at least `Watcher Inactive Time`.

    Inputs:
      - **Watcher**: an entity with 'on'/'off' state capability which triggers scene activation.
      - **Watcher Inactive Time** (*default*: 60, *unit*: seconds): an amount of time `Watcher` required to stay in 'off' state in order to get the `Default Off Scene` activated.
      - **Default On Scene**: a scene to activate after the `Watcher` switches to 'on' state.
      - **Default Off Scene** (*optional*): an optional scene to activate after the `Watcher` switches to 'off' state and stays in it for at least `Watcher Inactive Time`.
      - **Scene #1** (*optional*): a scene that should be activated within `Scene #1 Time On` - `Scene #1 Time Off` time range.
      - **Scene #1 Time On** (*optional*): `Scene #1` time range start.
      - **Scene #1 Time Off** (*optional*): `Scene #1` time range end.
      - **Scene #2** (*optional*): a scene that should be activated within `Scene #2 Time On` - `Scene #2 Time Off` time range.
      - **Scene #2 Time On** (*optional*): `Scene #2` time range start.
      - **Scene #2 Time Off** (*optional*): `Scene #2` time range end.
      - **Scene #3** (*optional*): a scene that should be activated within `Scene #3 Time On` - `Scene #3 Time Off` time range.
      - **Scene #3 Time On** (*optional*): `Scene #3` time range start.
      - **Scene #3 Time Off** (*optional*): `Scene #3` time range end.
      - **Scene #4** (*optional*): a scene that should be activated within `Scene #4 Time On` - `Scene #4 Time Off` time range.
      - **Scene #4 Time On** (*optional*): `Scene #4` time range start.
      - **Scene #4 Time Off** (*optional*): `Scene #4` time range end.
      - **Reload Scene Again After a Custom Delay (*default*: `true`): if true the blueprint loads a scene again after a custom delay to make sure it's applied correctly.
      - **Run If** (*optional*): an entity to check for `Run If State` match.
      - **Run If State** (*optional*): a state in which the `Run If` entity should be in order to run the automation.
      - **Run On Watcher Off** (*optional*): treat Run If condition as `True` when `Watcher` goes to `off` state.
      - **Run On Watcher On** (*optional*): treat Run If condition as `True` when `Watcher` goes to `on` state.

  source_url: https://raw.githubusercontent.com/arkid15r/home-assistant-config/main/blueprints/automation/scene_automation.yaml

  domain: automation
  input:
    watcher:
      name: Watcher
      description: An entity that triggers scene activation
      default:
      selector:
        entity: {}

    watcher_inactive_time_seconds:
      name: Watcher Inactive Time
      description: An amount of time the watcher needs to remain inactive in order to load the `Default Off Scene`
      default: 0
      selector:
        number:
          min: 0
          max: 3600
          step: 1
          unit_of_measurement: seconds
          mode: slider

    default_scene_on:
      name: Default On Scene
      description: A scene to activate if none of the 3 optional scenes is selected for activation
      default:
      selector:
        entity:
          domain: scene

    default_scene_off:
      name: Default Off Scene (optional)
      description: A scene to activate after the `Watcher Inactive Time`
      default: scene.none
      selector:
        entity:
          domain: scene

    scene_1:
      name: 'Scene #1 (optional)'
      description: 'A scene #1'
      default: scene.none
      selector:
        entity:
          domain: scene

    scene_1_time_on:
      name: 'Scene #1 Time On (optional)'
      description: 'A Time On for the Scene #1'
      default: '00:00:00'
      selector:
        entity:
          domain: input_datetime

    scene_1_time_off:
      name: 'Scene #1 Time Off (optional)'
      description: 'An Time Off for the Scene #1'
      default: '00:00:00'
      selector:
        entity:
          domain: input_datetime

    scene_2:
      name: 'Scene #2 (optional)'
      description: 'A scene #2'
      default: scene.none
      selector:
        entity:
          domain: scene

    scene_2_time_on:
      name: 'Scene #2 Time On (optional)'
      description: 'A Time On for the Scene #2'
      default: '00:00:00'
      selector:
        entity:
          domain: input_datetime

    scene_2_time_off:
      name: 'Scene #2 Time Off (optional)'
      description: 'An Time Off for the Scene #2'
      default: '00:00:00'
      selector:
        entity:
          domain: input_datetime

    scene_3:
      name: 'Scene #3 (optional)'
      description: 'A scene #3'
      default: scene.none
      selector:
        entity:
          domain: scene

    scene_3_time_on:
      name: 'Scene #3 Time On (optional)'
      description: 'A Time On for the Scene #3'
      default: '00:00:00'
      selector:
        entity:
          domain: input_datetime

    scene_3_time_off:
      name: 'Scene #3 Time Off (optional)'
      description: 'An Time Off for the Scene #3'
      default: '00:00:00'
      selector:
        entity:
          domain: input_datetime

    scene_4:
      name: 'Scene #4 (optional)'
      description: 'A scene #4'
      default: scene.none
      selector:
        entity:
          domain: scene

    scene_4_time_on:
      name: 'Scene #4 Time On (optional)'
      description: 'A Time On for the Scene #4'
      default: '00:00:00'
      selector:
        entity:
          domain: input_datetime

    scene_4_time_off:
      name: 'Scene #4 Time Off (optional)'
      description: 'An Time Off for the Scene #4'
      default: '00:00:00'
      selector:
        entity:
          domain: input_datetime

    reload_scene:
      name: 'Reload Scene Again After a Custom Delay'
      description: 'Make Sure the Scene is Loaded'
      default: true
      selector:
        boolean:

    run_if:
      name: Run If (optional)
      description: Run the automation if the entity
      default:
      selector:
        entity: {}

    run_if_state:
      name: Run If State (optional)
      description: Is in this state only
      default:
      selector:
        text:

    run_on_watcher_off:
      name: Evaluate Run If Condition To `True` When Trigger State (optional)
      description: Goes to "Off"
      default: false
      selector:
        boolean:

    run_on_watcher_on:
      name: Evaluate Run If Condition To `True` When Trigger State (optional)
      description: Goes to "On"
      default: false
      selector:
        boolean:

variables:
  reload_scene: !input reload_scene
  reload_scene_delay_seconds: >
    {{ states('input_number.scene_reload_delay') | float }}
  run_if: !input run_if
  run_if_state: !input run_if_state
  run_on_watcher_off: !input run_on_watcher_off
  run_on_watcher_on: !input run_on_watcher_on
  scene_1: !input scene_1
  scene_2: !input scene_2
  scene_3: !input scene_3
  scene_4: !input scene_4
  watcher: !input watcher
  watcher_inactive_time_seconds: !input watcher_inactive_time_seconds

trigger:
  - platform: state
    entity_id: !input watcher
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: !input watcher
    from: 'on'
    to: 'off'
    for: !input watcher_inactive_time_seconds

action:
  - choose:
      # The `Watcher` goes 'off'.
      - conditions:
          - condition: template
            value_template: >
              {{ trigger.to_state.state == 'off' and
                 default_scene_off != 'scene.none'
              }}
          - condition: or
            conditions:
              - '{{ run_if == none or run_if_state == none }}'
              - '{{ run_on_watcher_off == true }}'
              - '{{ states[run_if].state == run_if_state }}'
              - '{{ states[run_if].state == "unknown" }}'
        sequence:
          - service: scene.turn_on
            target:
              entity_id: !input default_scene_off
          - condition: template
            value_template: >
              {{ reload_scene == true }}
          - delay:
              seconds: >
                {{ reload_scene_delay_seconds }}
          - service: scene.turn_on
            target:
              entity_id: !input default_scene_off

      # The `Watcher` goes 'on'.
      - conditions:
          - condition: template
            value_template: >
              {{ trigger.to_state.state == 'on' }}
          - condition: or
            conditions:
              - '{{ run_if == none or run_if_state == none }}'
              - '{{ run_on_watcher_on == true }}'
              - '{{ states[run_if].state == run_if_state }}'
              - '{{ states[run_if].state == "unknown" }}'
        sequence:
          - choose:
              - conditions:
                  - '{{ scene_1 != "scene.none" }}'
                  - condition: time
                    after: !input scene_1_time_on
                    before: !input scene_1_time_off
                sequence:
                  - service: scene.turn_on
                    target:
                      entity_id: !input scene_1
                  - condition: template
                    value_template: >
                      {{ reload_scene == true }}
                  - delay:
                      seconds: >
                        {{ reload_scene_delay_seconds }}
                  - service: scene.turn_on
                    target:
                      entity_id: !input scene_1

              - conditions:
                  - '{{ scene_2 != "scene.none" }}'
                  - condition: time
                    after: !input scene_2_time_on
                    before: !input scene_2_time_off
                sequence:
                  - service: scene.turn_on
                    target:
                      entity_id: !input scene_2
                  - condition: template
                    value_template: >
                      {{ reload_scene == true }}
                  - delay:
                      seconds: >
                        {{ reload_scene_delay_seconds }}
                  - service: scene.turn_on
                    target:
                      entity_id: !input scene_2

              - conditions:
                  - '{{ scene_3 != "scene.none" }}'
                  - condition: time
                    after: !input scene_3_time_on
                    before: !input scene_3_time_off
                sequence:
                  - service: scene.turn_on
                    target:
                      entity_id: !input scene_3
                  - condition: template
                    value_template: >
                      {{ reload_scene == true }}
                  - delay:
                      seconds: >
                        {{ reload_scene_delay_seconds }}
                  - service: scene.turn_on
                    target:
                      entity_id: !input scene_3

              - conditions:
                  - '{{ scene_4 != "scene.none" }}'
                  - condition: time
                    after: !input scene_4_time_on
                    before: !input scene_4_time_off
                sequence:
                  - service: scene.turn_on
                    target:
                      entity_id: !input scene_4
                  - condition: template
                    value_template: >
                      {{ reload_scene == true }}
                  - delay:
                      seconds: >
                        {{ reload_scene_delay_seconds }}
                  - service: scene.turn_on
                    target:
                      entity_id: !input scene_4

            default:
              - service: scene.turn_on
                target:
                  entity_id: !input default_scene_on
              - condition: template
                value_template: >
                  {{ reload_scene == true }}
              - delay:
                  seconds: >
                    {{ reload_scene_delay_seconds }}
              - service: scene.turn_on
                target:
                  entity_id: !input default_scene_on
