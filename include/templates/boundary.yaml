- binary_sensor:
    - unique_id: front_door_closed
      name: Front Door Closed
      icon: mdi:door
      state: >
        {{ is_state('binary_sensor.front_door', 'off') }}

    - unique_id: garage_gate_closed
      name: Garage Gate Closed
      icon: mdi:garage-variant
      state: >
        {{ is_state('binary_sensor.garage_gate', 'off') }}

    - unique_id: living_room_door_closed
      name: Living Room Door Closed
      icon: mdi:door
      state: >
        {{ is_state('binary_sensor.living_room_door', 'off') }}

- sensor:
    - unique_id: security_perimeter_breached
      name: Security Perimeter Breached
      icon: mdi:home-alert-outline
      state: >
        {{ 'on' if expand('group.perimeter_security')|
             selectattr('state', 'eq', 'on')|list|count > 0 else 'off'
        }}
      attributes:
        template: boundary
        entities: >
          {{ expand('group.perimeter_security')|
               selectattr('state', 'eq', 'on')|
               map(attribute='entity_id')|sort
          }}
        entities_summary: >
          {% set entities = expand('group.perimeter_security')|
               selectattr('state', 'eq', 'on')|
               map(attribute='name')|unique|sort
          %}
          {%- for entity in entities -%}
            {% if loop.last -%}
              {% if loop.length > 1 %}and {% else %} {% endif %}
            {%- endif -%}
            {{ entity -}}
            {% if loop.first and loop.length == 2 %} {% endif %}
            {%- if not loop.last and loop.length > 2 %}, {% endif %}
          {%- endfor %}

    - unique_id: security_perimeter_tampered
      name: Security Perimeter Tampered
      icon: mdi:home-alert-outline
      state: >
        {% set entities = expand('group.perimeter_security')|
             map(attribute='entity_id')|
             map('regex_replace', '$', '_tamper')
        %}
        {% set tampered = expand(entities)|selectattr('state', 'eq', 'on') %}
        {{ 'on' if tampered|list|count > 0 else 'off' }}
      attributes:
        template: boundary
        entities: >
          {% set entities = expand('group.perimeter_security')|
               map(attribute='entity_id')|
               map('regex_replace', '$', '_tamper')
          %}
          {% set entities = expand(entities)|
               selectattr('state', 'eq', 'on')|
               map(attribute='entity_id')|
               map('regex_replace', '_tamper$', '')
          %}
          {{ entities }}
