- binary_sensor:
    - unique_id: corridor_temperature
      name: Corridor Temperature
      state: >
        {{ state_attr('climate.thermostat', 'current_temperature')|round }}

    - unique_id: hvac_cooling
      name: HVAC Cooling
      icon: mdi:thermometer-minus
      state: >
        {{ not is_state('climate.thermostat', 'off') and
           state_attr('climate.thermostat', 'hvac_action') in ('cooling',) and
           'compCool1' in state_attr('climate.thermostat', 'equipment_running')
        }}

    - unique_id: hvac_heating
      name: HVAC Heating
      icon: mdi:thermometer-plus
      state: >
        {{ not is_state('climate.thermostat', 'off') and
           state_attr('climate.thermostat', 'hvac_action') in ('heating',) and
           'auxHeat1' in state_attr('climate.thermostat', 'equipment_running')
        }}

    - unique_id: hvac_running
      name: HVAC Running
      icon: mdi:thermometer-lines
      state: >
        {{ is_state('binary_sensor.hvac_cooling',' on') or
           is_state('binary_sensor.hvac_heating', 'on')
        }}

    - unique_id: indoor_temperature_higher
      name: Indoor Temperature Higher
      state: >
        {{ states('sensor.temperature')|int >
             states('sensor.indoor_temperature')|int
        }}

    - unique_id: indoor_temperature_2_degree_higher
      name: Indoor Temperature 2 Degree Higher
      state: >
        {{ states('sensor.temperature')|int + 2 >
             states('sensor.indoor_temperature')|int
        }}

  sensor:
    - unique_id: indoor_temperature
      name: Indoor Temperature
      icon: mdi:thermometer
      state: >
        {{ expand('group.indoor_temperature')|
             rejectattr('state', 'in', ('unavailable',))|
             map(attribute='state')|
             map('float')|average|round
        }}

    - unique_id: perimeter_thermal_impacted_areas
      name: Perimeter Thermal Impacted Areas
      icon: mdi:door
      state: >
        {% set impacted = namespace(areas=[]) %}
        {% for entity_id in expand('group.perimeter_thermal')|
             map(attribute='entity_id')
        %}
          {% set area = area_name(entity_id) %}
          {% if is_state(entity_id, 'on') and area not in impacted.areas %}
            {% set impacted.areas = impacted.areas + [area] %}
          {% endif %}
        {% endfor %}
        {%- for area in impacted.areas -%}
          {%- if loop.last -%}
            {%- if impacted.areas|count > 1 -%}and {% else %} {%- endif -%}
          {%- endif -%}
          {{- area -}}
          {% if impacted.areas|count == 2 %} {% endif %}
          {%- if not loop.last and impacted.areas|count > 2 -%}, {% endif %}
        {%- endfor -%}
